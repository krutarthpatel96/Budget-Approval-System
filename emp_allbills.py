#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.14
# In conjunction with Tcl version 8.6
#    Jul 03, 2018 04:25:23 PM

import sys
import cx_Oracle as c
import smtplib as s


try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import emp_allbills_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = New_Toplevel (root)
    emp_allbills_support.init(root, top)
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel (w)
    emp_allbills_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None


class New_Toplevel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 

        top.geometry("547x450+650+150")
        top.title("Submitted Bills")
        top.configure(background="#d9d9d9")



        self.Frame1 = Frame(top)
        self.Frame1.place(relx=0.02, rely=0.02, relheight=0.94, relwidth=0.96)
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(width=525)

        self.Label1 = Label(self.Frame1)
        self.Label1.place(relx=0.04, rely=0.03, height=21, width=41)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Bill No''')

        self.Label2 = Label(self.Frame1)
        self.Label2.place(relx=0.17, rely=0.03, height=21, width=51)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Bill Type''')
        self.Label2.configure(width=51)

        self.Label3 = Label(self.Frame1)
        self.Label3.place(relx=0.3, rely=0.03, height=21, width=81)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Manager No''')
        self.Label3.configure(width=81)

        self.Label4 = Label(self.Frame1)
        self.Label4.place(relx=0.5, rely=0.03, height=21, width=81)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Remarks''')

        self.Label5 = Label(self.Frame1)
        self.Label5.place(relx=0.69, rely=0.03, height=21, width=81)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''Bill Status''')

        self.Label6= Label(self.Frame1)
        self.Label6.place(relx=0.84, rely=0.03, height=21, width=81)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''Action''')

        f1=open("show_bills.txt","r")
        self.e_no=f1.read()
        f1.close()

        self.lbl1=[]
        self.lbl2=[]
        self.lbl3=[]
        self.lbl4=[]
        self.lbl5=[]
        self.btn1=[]

        self.databno=[]

        conn = c.connect("system/2824@localhost/xe")
        cur=conn.cursor()
        data=cur.execute("select * from requests where eno='"+self.e_no+"'")
        self.add_views(data)
        
    def add_views(self,data):

        y=0.09
        i=0
        
        for row in data:
            i=i+1
            #print('i : '+str(i))
            
            self.Label1_1 = Label(self.Frame1)
            self.Label1_1.place(relx=0.04, rely=i*y, height=21, width=41)
            self.Label1_1.configure(activebackground="#f9f9f9")
            self.Label1_1.configure(activeforeground="black")
            self.Label1_1.configure(background="#d9d9d9")
            self.Label1_1.configure(disabledforeground="#a3a3a3")
            self.Label1_1.configure(foreground="#000000")
            self.Label1_1.configure(highlightbackground="#d9d9d9")
            self.Label1_1.configure(highlightcolor="black")
            self.Label1_1.configure(text='''Bill No''')

            self.Label1_2 = Label(self.Frame1)
            self.Label1_2.place(relx=0.17, rely=i*y, height=21, width=51)
            self.Label1_2.configure(activebackground="#f9f9f9")
            self.Label1_2.configure(activeforeground="black")
            self.Label1_2.configure(background="#d9d9d9")
            self.Label1_2.configure(disabledforeground="#a3a3a3")
            self.Label1_2.configure(foreground="#000000")
            self.Label1_2.configure(highlightbackground="#d9d9d9")
            self.Label1_2.configure(highlightcolor="black")
            self.Label1_2.configure(text='''Bill Type''')

            self.Label1_3 = Label(self.Frame1)
            self.Label1_3.place(relx=0.3, rely=i*y, height=21, width=81)
            self.Label1_3.configure(activebackground="#f9f9f9")
            self.Label1_3.configure(activeforeground="black")
            self.Label1_3.configure(background="#d9d9d9")
            self.Label1_3.configure(disabledforeground="#a3a3a3")
            self.Label1_3.configure(foreground="#000000")
            self.Label1_3.configure(highlightbackground="#d9d9d9")
            self.Label1_3.configure(highlightcolor="black")
            self.Label1_3.configure(text='''Manager No''')

            self.Label1_4 = Label(self.Frame1)
            self.Label1_4.place(relx=0.5, rely=i*y, height=21, width=81)
            self.Label1_4.configure(activebackground="#f9f9f9")
            self.Label1_4.configure(activeforeground="black")
            self.Label1_4.configure(background="#d9d9d9")
            self.Label1_4.configure(disabledforeground="#a3a3a3")
            self.Label1_4.configure(foreground="#000000")
            self.Label1_4.configure(highlightbackground="#d9d9d9")
            self.Label1_4.configure(highlightcolor="black")
            self.Label1_4.configure(text='''Remarks''')

            self.Label1_5 = Label(self.Frame1)
            self.Label1_5.place(relx=0.69, rely=i*y, height=21, width=81)
            self.Label1_5.configure(activebackground="#f9f9f9")
            self.Label1_5.configure(activeforeground="black")
            self.Label1_5.configure(background="#d9d9d9")
            self.Label1_5.configure(disabledforeground="#a3a3a3")
            self.Label1_5.configure(foreground="#000000")
            self.Label1_5.configure(highlightbackground="#d9d9d9")
            self.Label1_5.configure(highlightcolor="black")
            self.Label1_5.configure(text='''Bill Status''')

            self.Label1_1.configure(text=row[0])
            self.Label1_2.configure(text=row[3])
            self.Label1_3.configure(text=row[1])

            conn = c.connect("system/2824@localhost/xe")
            cur=conn.cursor()

            #data2=cur.execute("select * from manager where mno='"+row[1]+"'")
            #for row2 in data2:
             #   self.m_name=row2[1]

            #print(self.m_name)
            
            self.Label1_4.configure(text=row[6])
            self.Label1_5.configure(text=row[5])
            self.Label1_5.configure(fg="green")

            if(row[5]=='Rejected'):
                self.Label1_5.configure(fg="red")
            elif(row[5]=='Pending'):
                self.Label1_5.configure(fg="blue")
            
            self.lbl1.append(self.Label1_1)
            self.lbl2.append(self.Label1_2)
            self.lbl3.append(self.Label1_3)
            self.lbl4.append(self.Label1_4)
            self.lbl5.append(self.Label1_5)

            self.databno.append(row[0])

            if(row[5]!='Approved'):

                self.Label1_6 = Button(self.Frame1)
                self.Label1_6.place(relx=0.84, rely=i*y, height=27, width=74)
                self.Label1_6.configure(activebackground="#f9f9f9")
                self.Label1_6.configure(activeforeground="black")
                self.Label1_6.configure(background="#d9d9d9")
                self.Label1_6.configure(disabledforeground="#a3a3a3")
                self.Label1_6.configure(foreground="#000000")
                self.Label1_6.configure(highlightbackground="#d9d9d9")
                self.Label1_6.configure(highlightcolor="black")
                self.Label1_6.configure(text='''Delete''')
                self.Label1_6.configure(command=lambda i=i:self.delbill(i-1))

                self.btn1.append(self.Label1_6)
            else:
                self.Label1_6 = Label(self.Frame1)
                self.Label1_6.place(relx=0.84, rely=i*y, height=21, width=74)
                self.Label1_6.configure(activebackground="#f9f9f9")
                self.Label1_6.configure(activeforeground="black")
                self.Label1_6.configure(background="#d9d9d9")
                self.Label1_6.configure(disabledforeground="#a3a3a3")
                self.Label1_6.configure(foreground="#000000")
                self.Label1_6.configure(highlightbackground="#d9d9d9")
                self.Label1_6.configure(highlightcolor="black")
                self.Label1_6.configure(text='''None''')
                self.btn1.append(None)
            
    def delbill(self,pos):

        print(self.databno[pos])
        self.b_dbno=self.databno[pos]
        self.lbl5[pos].configure(text="DELETED")
        self.lbl5[pos].configure(fg="red")
        self.btn1[pos].destroy()
        conn = c.connect("system/2824@localhost/xe")
        cur=conn.cursor()
        cur.execute("delete from requests where bill_no='"+self.databno[pos]+"'")
        conn.commit()
        conn.close()

        server=s.SMTP('smtp.gmail.com',587)
        server.ehlo()
        server.starttls()

        server.login("budget.approval.system.project@gmail.com",'Budget@python07')

        text='\nBill No. : '+self.b_dbno+' has been deleted as per your request.';
        
        msg = """From: %s\nTo: %s\nSubject: %s\n\n%s""" %('budget.approval.system.project@gmail.com', ",", 'Bill Deletion', text)

        server.sendmail("budget.approval.system.project@gmail.com",'16bit159@nirmauni.ac.in',msg)
        server.quit()
         
        

if __name__ == '__main__':
    vp_start_gui()



