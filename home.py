#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.14
# In conjunction with Tcl version 8.6
#    Jul 01, 2018 12:43:42 PM

import sys
import os as oo
import cx_Oracle as c

try:
    from Tkinter import *

except ImportError:
    from tkinter import *

import tkinter
from tkinter import messagebox

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import datetime as dt

import home_support
import employee_panel as gmp
import manager_panel as mmp


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = New_Toplevel (root)
    home_support.init(root, top)
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel (w)
    home_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None


class New_Toplevel:
    def __init__(self, top1=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 

        self.top=top1
        self.top.geometry("596x450+438+194")
        self.top.title("Login")
        self.top.configure(background="#d9d9d9")

        self.Frame1 = Frame(self.top)
        self.Frame1.place(relx=0.03, rely=0.07, relheight=0.86, relwidth=0.93)
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(width=555)

        self.emp_login = Button(self.Frame1)
        self.emp_login.place(relx=0.05, rely=0.49, relheight=0.17, relwidth=0.9)
        self.emp_login.configure(activebackground="#d9d9d9")
        self.emp_login.configure(activeforeground="#000000")
        self.emp_login.configure(background="#d9d9d9")
        self.emp_login.configure(disabledforeground="#a3a3a3")
        self.emp_login.configure(foreground="#000000")
        self.emp_login.configure(highlightbackground="#d9d9d9")
        self.emp_login.configure(highlightcolor="black")
        self.emp_login.configure(pady="0")
        self.emp_login.configure(text='''Employee Panel''')
        self.emp_login.configure(width=497)
        self.emp_login.configure(command=self.goto_emp)


        self.mng_login = Button(self.Frame1)
        self.mng_login.place(relx=0.05, rely=0.73, relheight=0.17, relwidth=0.9)
        self.mng_login.configure(activebackground="#d9d9d9")
        self.mng_login.configure(activeforeground="#000000")
        self.mng_login.configure(background="#d9d9d9")
        self.mng_login.configure(disabledforeground="#a3a3a3")
        self.mng_login.configure(foreground="#000000")
        self.mng_login.configure(highlightbackground="#d9d9d9")
        self.mng_login.configure(highlightcolor="black")
        self.mng_login.configure(pady="0")
        self.mng_login.configure(text='''Manager Panel''')
        self.mng_login.configure(command=self.goto_mng)

        self.Label1 = Label(self.Frame1)
        self.Label1.place(relx=0.05, rely=0.1, height=31, width=154)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''User Id (Emp No/Mng No)''')
        self.Label1.configure(width=154)

        self.Label1_1 = Label(self.Frame1)
        self.Label1_1.place(relx=0.05, rely=0.29, height=31, width=74)
        self.Label1_1.configure(activebackground="#f9f9f9")
        self.Label1_1.configure(activeforeground="black")
        self.Label1_1.configure(background="#d9d9d9")
        self.Label1_1.configure(disabledforeground="#a3a3a3")
        self.Label1_1.configure(foreground="#000000")
        self.Label1_1.configure(highlightbackground="#d9d9d9")
        self.Label1_1.configure(highlightcolor="black")
        self.Label1_1.configure(text='''Password''')
        self.Label1_1.configure(width=74)

        self.userid = Entry(self.Frame1)
        self.userid.place(relx=0.38, rely=0.1,height=30, relwidth=0.3)
        self.userid.configure(background="white")
        self.userid.configure(disabledforeground="#a3a3a3")
        self.userid.configure(font="TkFixedFont")
        self.userid.configure(foreground="#000000")
        self.userid.configure(insertbackground="black")
        self.userid.configure(width=164)

        self.fra38_ent41 = Entry(self.Frame1)
        self.fra38_ent41.place(relx=0.38, rely=0.29,height=30, relwidth=0.3)
        self.fra38_ent41.configure(background="white")
        self.fra38_ent41.configure(disabledforeground="#a3a3a3")
        self.fra38_ent41.configure(font="TkFixedFont")
        self.fra38_ent41.configure(foreground="#000000")
        self.fra38_ent41.configure(highlightbackground="#d9d9d9")
        self.fra38_ent41.configure(highlightcolor="black")
        self.fra38_ent41.configure(insertbackground="black")
        self.fra38_ent41.configure(selectbackground="#c4c4c4")
        self.fra38_ent41.configure(selectforeground="black")

    def goto_emp(self):

        self.uid=self.userid.get()
        self.pwd=self.fra38_ent41.get()
        if(len(self.uid)>0 and len(self.pwd)>0):
        
            conn = c.connect("system/2824@localhost/xe")
            cur=conn.cursor()         
            data=cur.execute("select * from employee where eno='"+self.uid+"' and pass='"+self.pwd+"'")
            r=data.fetchone()

            if(r==None):
                messagebox.showinfo('Error','Emp No '+self.uid+' not found or Password is Incorrect!')
            else:
                try:
                    f1=open("Data_Entry.txt","w+")
                    f1.write(self.uid)
                    f1=open("Data_Entry.txt","r")
                    print(f1.read())
                    f1.close
                    self.top.destroy()
                    gmp.vp_start_gui()

                except Exception as e:
                    print (e)
        else:
            messagebox.showinfo('Error','Please fill the entries!')
            

    def goto_mng(self):
        self.uid=self.userid.get()
        self.pwd=self.fra38_ent41.get()
        if(len(self.uid)>0 and len(self.pwd)>0):
        
            conn = c.connect("system/2824@localhost/xe")
            cur=conn.cursor()
                    
            data=cur.execute("select * from manager where mno='"+self.uid+"' and pass='"+self.pwd+"'")
            r=data.fetchone()

            if(r==None):
                messagebox.showinfo('Error','Manager No '+self.uid+' not found or Password is Incorrect!')
            else:
                try:
                    f1=open("Data_Entry2.txt","w+")
                    f1.write(self.uid)
                    f1=open("Data_Entry2.txt","r")
                    print(f1.read())
                    f1.close
                    self.top.destroy()
                    mmp.vp_start_gui()
                except Exception as e:
                    print (e)
        else:
            messagebox.showinfo('Error','Please fill the entries!')

if __name__ == '__main__':
    vp_start_gui()



